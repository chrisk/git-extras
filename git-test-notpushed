#!/usr/bin/env ruby
#
# git-test-notpushed
# Runs a command against a checkout of each commit you haven't pushed to the
# remote yet. Handy for running an automated test suite against each of your
# changes. Stops early if the command returns a non-zero status code.
#
# Usage:
#   git test-notpushed command-to-run
#
# Example:
#   git test-notpushed rake


def formatted_output(current_action = nil, message = '')
  reverse, bold, reset = "\e[7m", "\e[1m", "\e[0m"

  if current_action.nil?
    "#{bold}#{message}#{reset}"
  else
    "#{reverse} #{current_action} #{reset} #{bold}#{message}#{reset}"
  end
end


command = $*.join(' ')
commits = `git-notpushed --pretty=format:%H`
current_branch = `git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'`

at_exit do
  puts formatted_output("Returning to", current_branch)
  `git checkout -q #{current_branch}`
end

commits.each do |sha|
  puts formatted_output("Switching to", sha)
  system "git checkout -q #{sha}"

  puts formatted_output("Running test", command)
  system command
  if !$?.success?
    puts formatted_output(nil, "Error running test!\n")
    break
  end
end